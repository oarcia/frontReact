scalar Upload
type Query{
    prueba:String
    Users:[User]
    User(id:ID!):User
    Posts(category:CATEGORIES):[Post]
    Post(id:ID):Post
}


type Mutation{
    signup(data: UserCreateInput!): Auth,
    login(email:String!,password:String!):Auth,
    #creamos un nuevo mutation para crear un pos
    createPost(data: InputCreatePost!):Post, #le mandamos la data de todo lo que nesecitamos
    updateUser(id:ID,data:UserCreateInput):User,
    deleteUser(id:ID):String,
    #updatePost,(id:ID, data:PostUpdateInput):Post,
    deletePost(id:ID):String,
}
type Post{
    _id: ID
    title: String
    author: User
    category:CATEGORIES
    tags:[String]
    likes:Int
    is_active:Boolean
}
 type User {
     _id: ID
     first_name:String
     last_name:String
     email:String
     birth_date:String
     gender:GENDER
     posts:[Post]
     profile_image:String
     is_active:Boolean
 }
input InputCreatePost{
    title:String
    content:String
    category: CATEGORIES
}
enum CATEGORIES{
    TECH
    HEALTH
    GAME
    DEV
}
type Auth{
    token:String
    message:String
}
input UserCreateInput{
    first_name: String!
    last_name: String
    email:String!
    password:String!
    birth_date:String
    gender:GENDER
    profile_image:Upload #este ahorita no
}

enum GENDER{
    Male
    Female
}

type Subscription{
    newPost:Post!,#nos regresa la darta del post todo es mostrar datos en tiempo real
    


}